{"version":3,"sources":["components/dashboard.js","components/editfood.js","components/user-info.js","components/orderdetail.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","argument","useState","user","setUser","like","setLike","disLike","setDisLike","useEffect","axios","get","then","result","data","className","id","onClick","document","getElementById","classList","toggle","console","log","likes","map","dislikes","OverlayTrigger","key","placement","overlay","Tooltip","href","style","color","EditFoodPrefernce","Image","src","padding","marginBottom","label","defaultValue","onAdd","event","push","target","value","post","onDelete","forEach","item","fullWidth","User","flag","setFlag","name","setName","address","setAddress","phone","setPhone","Container","Card","Title","about","Body","Footer","to","Modal","show","animation","onHide","backgroundColor","Form","onSubmit","preventDefault","update","alert","Control","type","onChange","Button","OrderPage","order","setOrder","restList","setRestList","setId","time","setTime","setData","items","length","hanldeLargeList","createdAt","order_id","restaurant","sum","price","tax_pct","item_total","total_tax","moreItem","slice","window","print","marginTop","paddingLeft","margin","street","city","state","zipcode","category","fontSize","App","exact","path","process","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60c90754.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport {OverlayTrigger,Tooltip} from \"react-bootstrap\";\nimport {BrowserRouter as Router,Link} from \"react-router-dom\"\nimport \"./dashboard.css\";\nimport axios from 'axios'\nfunction Dashboard(argument) {\n\t// body...\n   const [user,setUser]=useState({})\n   const [like,setLike]=useState([])\n   const [disLike,setDisLike]=useState([])\n   useEffect(()=>{\n        axios.get('https://indapi.kumba.io/webdev/assignment')\n         .then((result)=>{setUser(result.data.user)})\n   },[])\n  const handleDashboard=()=>{\n  document.getElementById('dashboard').classList.toggle(\"block\");\n  console.log(user.likes)\n  setLike(user.likes.map((like)=><li className=\"sublist\">{like}</li>))\n  \tsetDisLike(user.dislikes.map((result)=><li className=\"sublist\">{result}</li>))\n  }\n\treturn(\n\t\t<div className=\"dashboard\"> \n\t\t\t\t<h3><button id=\"btn\" className=\"dashboard-button\" onClick={handleDashboard}><i className=\"material-icons\">menu</i></button></h3>\n\t\t <div id=\"dashboard\" className=\"dashboard-list\">\n\t\t <ul className=\"list\">\n\t\t <li className=\"dashboard-title\">DASHBORD</li>\n\t\t <OverlayTrigger\n      key='1'\n      placement='right'\n      overlay={\n        <Tooltip id={`tooltip-right`}>\n        <ul>\n          {like}\n        </ul>\n        </Tooltip>\n      }\n    ><li className=\"list-item\">Liked Food</li>\n    </OverlayTrigger>\n     <OverlayTrigger\n      key='2'\n      placement='right'\n      overlay={\n        <Tooltip id={`tooltip-right`}>\n        <ul>\n          {disLike}\n        </ul>\n        </Tooltip>\n      }\n    >\n\t\t <li className=\"list-item\">Disliked Food</li>\n\t\t </OverlayTrigger>\n\t\t <li className=\"list-item\"><a href=\"/ordersummaryinfo\" style={{color:\"black\"}}>See order's</a></li>\n\t\t <li className=\"list-item\"><a href=\"#editfoodlist\" style={{color:\"black\"}}>Edit Food Choices</a></li>\n\t\t </ul>\n\t\t </div>\n       </div>\n\t\t)\n}\nexport default Dashboard;","import React,{useState,useEffect} from \"react\";\nimport {Image} from 'react-bootstrap';\nimport axios from 'axios';\nimport ChipInput from \"material-ui-chip-input\";\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport \"./editfood.css\";\n\n\nfunction EditFoodPrefernce(argument) {\n\t// body...\n\tconst [like,setLike]=useState([])\n   const [disLike,setDisLike]=useState([])\n\n\tuseEffect(()=>{\n          axios.get('https://indapi.kumba.io/webdev/assignment')\n          .then((result)=>{\n                    setLike(result.data.user.likes)\n                    setDisLike(result.data.user.dislikes)\n          })\n\t},[])\n    \n    const handleLikeAdd=(event)=>{\n    \tlike.push(event.target.value)\n      axios.post('https://indapi.kumba.io/webdev/assignment',{likes:like})\n    }\n    const handleDelete=(event)=>{\n      like.forEach((item)=>{\n        if (item==event.target.value) {\n           item=null\n           axios.post('https://indapi.kumba.io/webdev/assignment',{likes:like})\n        }\n      });\n    }\n    const handleDisLikeAdd=(event)=>{\n      disLike.push(event.target.value)\n      axios.post('https://indapi.kumba.io/webdev/assignment',{dislikes:disLike})\n    }\n    const handleDisLikeDelete=(event)=>{\n      disLike.forEach((item)=>{\n        if(item==event.target.value){\n          item=null\n          axios.post('https://indapi.kumba.io/webdev/assignment',{dislikes:disLike})\n        }\n      });\n\n    }\n\treturn(<div className=\"editprefernce\" id=\"editfoodlist\">\n           <Image src=\"food.jpeg\" className=\"foodgif\"/>\n\t\t    <h3 style={{padding:\"10px\"}}>Update your food prefernce here and  Experince more delighted food</h3>\n\t\t      <h4 style={{padding:\"10px\",marginBottom:\"10px\"}}>Most Ordered Taste:</h4>\n              <ChipInput\n                  label=\"like's\"\n                  defaultValue={like}\n              \t\tonAdd={handleLikeAdd}\n                  onDelete={handleDelete}   \n               />\n          <h4 style={{padding:\"10px\"}}>Least Ordered Taste:</h4>\n           <ChipInput\n                  label=\"dislike's\"\n                  defaultValue={disLike}\n                  onAdd={handleDisLikeAdd}\n                  onDelete={handleDisLikeDelete}   \n                  fullWidth\n               />\n\n              \t\t              \n\t\t</div>)\n}\nexport default EditFoodPrefernce;","import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport Dashboard from \"./dashboard\";\nimport {BrowserRouter as Router,Link} from \"react-router-dom\";\nimport {Container,Card,Button,Image,Modal,Form} from \"react-bootstrap\";\nimport \"./user.css\";\nimport EditFoodPrefrence from './editfood';\nfunction User() {\n  const [user,setUser]=useState({})\n  const [flag,setFlag]=useState(false)\n  const [name,setName]=useState('')\n  const [address,setAddress]=useState('')\n  const [phone,setPhone]=useState('')\n   useEffect(()=>{\n        axios.get('https://indapi.kumba.io/webdev/assignment')\n        .then((result)=>{setUser(result.data.user)\n          console.log(result)})\n   },[])\n  const handleName=(event)=>{\n    setName(event.target.value)\n  }\n  const handleAddress=(event)=>{\n    setAddress(event.target.value)\n  }\n  const handlePhone=(event)=>{\n    setPhone(event.target.value)\n  }\n  const handleSubmit=(event)=>{\n    event.preventDefault();\n    const update={\n      \"name\":name,\n      \"address\":address,\n      \"phone\":phone\n    }\n    axios.post('https://indapi.kumba.io/webdev/assignment',update)\n    .then(alert(\"Update Successful\"))\n  }\n  return (\n    <div>\n    <Dashboard/>  \n    <Container className=\"user\">\n      <Card>\n       <Card.Title className=\"profile\">\n        <Image src=\"male.png\"/>\n         <h3>\"{user.about}\"</h3>\n       </Card.Title>\n       <Card.Body className=\"card-body\">\n        <h3>- {user.name}</h3>\n       <h4>Costumer ID:{user.id}</h4>\n       <h4>Phone Number:{user.phone}</h4>\n       </Card.Body>\n       <Card.Footer>\n       <h4>Address:{user.address}</h4>\n       </Card.Footer>\n      </Card>\n      <h4>Request Edit <Link to=\"#editpersonalinfo\" onClick={()=>setFlag(true)}><i className=\"material-icons\">create</i></Link></h4>\n          </Container>\n        <Modal\n    show={flag}\n    animation=\"true\"\n    onHide={()=>setFlag(false)}\n    style={{backgroundColor:\"#99ffff\"}}\n    >\n    <Modal.Body>\n    <Form onSubmit={handleSubmit} className=\"update-info\">\n      <label>Name:</label>\n      <Form.Control type=\"text\" defaultValue={user.name} onChange={handleName}/>\n      <label>Address:</label>\n      <Form.Control type=\"text\" defaultValue={user.address} onChange={handleAddress} />\n      <label>Contact:</label>\n      <Form.Control type=\"text\" defaultValue={user.phone} onChange={handlePhone} />\n      <Button type=\"submit\">Change</Button>\n    </Form>\n    </Modal.Body>\n    <Modal.Footer>\n    <h4 style={{color:\"magenta\"}}>*Click any where outside box to  exit</h4>\n    </Modal.Footer>\n    </Modal>\n    <EditFoodPrefrence/>\n       </div>\n\n\n  );\n}\n\nexport default User;","import React,{useState,useEffect} from \"react\"\nimport axios from \"axios\"\nimport \"./orderdetail.css\"\nfunction OrderPage() {\n\t// body...\n\tconst [order,setOrder]=useState([])\n\tconst [restList,setRestList]=useState([])\n     const [id,setId]=useState('')\n     const [time,setTime]=useState('')\n\tconst [data,setData]=useState({})\n\tconst [user,setUser]=useState({})\n\t useEffect(()=>{\n        axios.get('https://indapi.kumba.io/webdev/assignment')\n         .then((result)=>{\n         \tsetOrder(result.data.items)\n         \tif (result.data.items.length>5) {\n         \t\thanldeLargeList()\n         \t}\n         \tsetUser(result.data.user)\n         \tsetTime(result.data.createdAt)\n         \tsetId(result.data.order_id)\n         \tsetData(result.data.restaurant)})\n   },[])\n\t let sum=0;\n                    order.forEach((item)=>{\n                        sum=sum+item.price+(item.price*item.tax_pct)/100;\n                    })\n    let item_total=0;\n    order.forEach((item)=>{\n      item_total=item_total+item.price;\n    })\n    let total_tax=0;\n      order.forEach((item)=>{\n        total_tax=total_tax+(item.price*item.tax_pct)/100;\n      })\n  const hanldeLargeList=()=>{\n       if (order.length>5) {\n       \tsetRestList(order.slice(5,));\n       \tsetOrder(null);\n       }\n  }\n  let flag=false;\n  let moreItem;\n  const showMore=()=>{\n     flag=true;\n     moreItem=restList.map((item)=>\n       <li key={item.name}>{item.name}<br/><small>\n                Category:{item.category} , Price:{item.price}INR </small></li>\n                     )\n  }\n\t return(\n\t \t<div id=\"summary\" className=\"order-page\">\n\t \t<a href=\"#\" onClick={()=>window.print()} style={{marginTop:\"20px\",paddingLeft:\"20px\",padding:\"10px\",margin:\"10px\"}} >Download Order Reciept <i className=\"material-icons\">get_app</i></a>\n              <header className=\"order-header\">\n              <h1 className=\"title\">Order Summary</h1>\n              </header>\n              <div className=\"metadata\">\n              <h3>Order Id:{id}</h3>\n              <h3>Order Placed at:{time}</h3>\n              </div>\n              <div className=\"hotel\">\n              <h3>Ordered From:</h3>\n              <h4 >{data.name}</h4>\n              <h4>Location : {data.street}</h4>\n              <h4>{data.city},{data.state}<br/>Pin code : {data.zipcode}</h4>\n              </div>\n              <div className=\"reciept-info\">\n              <h3>Recipient Info:</h3>\n              <h4>Delivery To : {user.name}</h4>\n              <h4>Address to be deliverd at : {user.address}</h4>\n              <h4>Phone Number : {user.phone}</h4>\n              </div>\n                <div className=\"item-info\">\n                <h3>Ordered Item's:<ol>{order.map((item)=><li key={item.name} className=\"items\">{item.name}<br/><small>\n                Category:{item.category} ,<br/> Price:{item.price}INR, Tax:{item.tax_pct}% </small></li>)}</ol></h3>\n                {\n                \torder.length && flag>5?<a href=\"#seemoreitems\" onClick={showMore}>see more</a>:null\n                }\n                {\n                \tflag?<ol>{moreItem}</ol>:null\n                }\n                </div>\n                <div className=\"total\">\n\n                {\n                   item_total>0?<h3>Total item price = {item_total}INR</h3>:null\n                }\n                {\n                   total_tax>0?<h3>Total tax = {total_tax}INR</h3>:null\n                }\n                {\n                   sum>0?<h3>Total Billing Amount = {sum}INR</h3>:null\n\n                }\n                <h3 className=\"footer-text\"> Happy Eating!</h3>\n                <b style={{color:\"red\",fontSize:\"25px\"}}>(*This reciept is generated for project purpose only,not valid any where.)</b>\n                </div>\n\t \t</div>\n\t \t)\n}\nexport default OrderPage;","import React,{useState,useEffect} from 'react';\nimport User from \"./components/user-info\";\nimport {BrowserRouter as Router ,Link,Switch,Route} from \"react-router-dom\";\nimport OrderPage from \"./components/orderdetail\";\nfunction App() {\n    return (\n    <div className=\"App\">\n              <Router>\n              <Switch>\n              <Route exact path={process.env.PUBLIC_URL+\"/\"} component={User}/>\n              <Route exact path=\"/ordersummaryinfo\" component={OrderPage}/>\n              </Switch>\n              </Router>\n           </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}